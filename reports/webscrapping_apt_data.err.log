Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/anaconda3/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
e = today.strftime("%d.%m.%Y")
print(e)
fname = "./Addresses/addresses_{}.xlsx".format(e)
print(fname)
apartments_df.to_excel(fname)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
Cell [0;32mIn[29], line 5[0m
[1;32m      3[0m fname [38;5;241m=[39m [38;5;124m"[39m[38;5;124m./Addresses/addresses_[39m[38;5;132;01m{}[39;00m[38;5;124m.xlsx[39m[38;5;124m"[39m[38;5;241m.[39mformat(e)
[1;32m      4[0m [38;5;28mprint[39m(fname)
[0;32m----> 5[0m [43mapartments_df[49m[38;5;241;43m.[39;49m[43mto_excel[49m[43m([49m[43mfname[49m[43m)[49m

File [0;32m/opt/anaconda3/lib/python3.9/site-packages/pandas/core/generic.py:2252[0m, in [0;36mNDFrame.to_excel[0;34m(self, excel_writer, sheet_name, na_rep, float_format, columns, header, index, index_label, startrow, startcol, engine, merge_cells, inf_rep, freeze_panes, storage_options)[0m
[1;32m   2239[0m [38;5;28;01mfrom[39;00m [38;5;21;01mpandas[39;00m[38;5;21;01m.[39;00m[38;5;21;01mio[39;00m[38;5;21;01m.[39;00m[38;5;21;01mformats[39;00m[38;5;21;01m.[39;00m[38;5;21;01mexcel[39;00m [38;5;28;01mimport[39;00m ExcelFormatter
[1;32m   2241[0m formatter [38;5;241m=[39m ExcelFormatter(
[1;32m   2242[0m     df,
[1;32m   2243[0m     na_rep[38;5;241m=[39mna_rep,
[0;32m   (...)[0m
[1;32m   2250[0m     inf_rep[38;5;241m=[39minf_rep,
[1;32m   2251[0m )
[0;32m-> 2252[0m [43mformatter[49m[38;5;241;43m.[39;49m[43mwrite[49m[43m([49m
[1;32m   2253[0m [43m    [49m[43mexcel_writer[49m[43m,[49m
[1;32m   2254[0m [43m    [49m[43msheet_name[49m[38;5;241;43m=[39;49m[43msheet_name[49m[43m,[49m
[1;32m   2255[0m [43m    [49m[43mstartrow[49m[38;5;241;43m=[39;49m[43mstartrow[49m[43m,[49m
[1;32m   2256[0m [43m    [49m[43mstartcol[49m[38;5;241;43m=[39;49m[43mstartcol[49m[43m,[49m
[1;32m   2257[0m [43m    [49m[43mfreeze_panes[49m[38;5;241;43m=[39;49m[43mfreeze_panes[49m[43m,[49m
[1;32m   2258[0m [43m    [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m,[49m
[1;32m   2259[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m   2260[0m [43m[49m[43m)[49m

File [0;32m/opt/anaconda3/lib/python3.9/site-packages/pandas/io/formats/excel.py:934[0m, in [0;36mExcelFormatter.write[0;34m(self, writer, sheet_name, startrow, startcol, freeze_panes, engine, storage_options)[0m
[1;32m    930[0m     need_save [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[1;32m    931[0m [38;5;28;01melse[39;00m:
[1;32m    932[0m     [38;5;66;03m# error: Cannot instantiate abstract class 'ExcelWriter' with abstract[39;00m
[1;32m    933[0m     [38;5;66;03m# attributes 'engine', 'save', 'supported_extensions' and 'write_cells'[39;00m
[0;32m--> 934[0m     writer [38;5;241m=[39m [43mExcelWriter[49m[43m([49m[43m  [49m[38;5;66;43;03m# type: ignore[abstract][39;49;00m
[1;32m    935[0m [43m        [49m[43mwriter[49m[43m,[49m[43m [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m
[1;32m    936[0m [43m    [49m[43m)[49m
[1;32m    937[0m     need_save [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m    939[0m [38;5;28;01mtry[39;00m:

File [0;32m/opt/anaconda3/lib/python3.9/site-packages/pandas/io/excel/_openpyxl.py:60[0m, in [0;36mOpenpyxlWriter.__init__[0;34m(self, path, engine, date_format, datetime_format, mode, storage_options, if_sheet_exists, engine_kwargs, **kwargs)[0m
[1;32m     56[0m [38;5;28;01mfrom[39;00m [38;5;21;01mopenpyxl[39;00m[38;5;21;01m.[39;00m[38;5;21;01mworkbook[39;00m [38;5;28;01mimport[39;00m Workbook
[1;32m     58[0m engine_kwargs [38;5;241m=[39m combine_kwargs(engine_kwargs, kwargs)
[0;32m---> 60[0m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[38;5;21;43m__init__[39;49m[43m([49m
[1;32m     61[0m [43m    [49m[43mpath[49m[43m,[49m
[1;32m     62[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m     63[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m     64[0m [43m    [49m[43mif_sheet_exists[49m[38;5;241;43m=[39;49m[43mif_sheet_exists[49m[43m,[49m
[1;32m     65[0m [43m    [49m[43mengine_kwargs[49m[38;5;241;43m=[39;49m[43mengine_kwargs[49m[43m,[49m
[1;32m     66[0m [43m[49m[43m)[49m
[1;32m     68[0m [38;5;66;03m# ExcelWriter replaced "a" by "r+" to allow us to first read the excel file from[39;00m
[1;32m     69[0m [38;5;66;03m# the file and later write to it[39;00m
[1;32m     70[0m [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mr+[39m[38;5;124m"[39m [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_mode:  [38;5;66;03m# Load from existing workbook[39;00m

File [0;32m/opt/anaconda3/lib/python3.9/site-packages/pandas/io/excel/_base.py:1219[0m, in [0;36mExcelWriter.__init__[0;34m(self, path, engine, date_format, datetime_format, mode, storage_options, if_sheet_exists, engine_kwargs)[0m
[1;32m   1215[0m [38;5;28mself[39m[38;5;241m.[39m_handles [38;5;241m=[39m IOHandles(
[1;32m   1216[0m     cast(IO[[38;5;28mbytes[39m], path), compression[38;5;241m=[39m{[38;5;124m"[39m[38;5;124mcompression[39m[38;5;124m"[39m: [38;5;28;01mNone[39;00m}
[1;32m   1217[0m )
[1;32m   1218[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(path, ExcelWriter):
[0;32m-> 1219[0m     [38;5;28mself[39m[38;5;241m.[39m_handles [38;5;241m=[39m [43mget_handle[49m[43m([49m
[1;32m   1220[0m [43m        [49m[43mpath[49m[43m,[49m[43m [49m[43mmode[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mis_text[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m
[1;32m   1221[0m [43m    [49m[43m)[49m
[1;32m   1222[0m [38;5;28mself[39m[38;5;241m.[39m_cur_sheet [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m   1224[0m [38;5;28;01mif[39;00m date_format [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py:737[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    735[0m [38;5;66;03m# Only for write methods[39;00m
[1;32m    736[0m [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mr[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode [38;5;129;01mand[39;00m is_path:
[0;32m--> 737[0m     [43mcheck_parent_directory[49m[43m([49m[38;5;28;43mstr[39;49m[43m([49m[43mhandle[49m[43m)[49m[43m)[49m
[1;32m    739[0m [38;5;28;01mif[39;00m compression:
[1;32m    740[0m     [38;5;28;01mif[39;00m compression [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mzstd[39m[38;5;124m"[39m:
[1;32m    741[0m         [38;5;66;03m# compression libraries do not like an explicit text-mode[39;00m

File [0;32m/opt/anaconda3/lib/python3.9/site-packages/pandas/io/common.py:600[0m, in [0;36mcheck_parent_directory[0;34m(path)[0m
[1;32m    598[0m parent [38;5;241m=[39m Path(path)[38;5;241m.[39mparent
[1;32m    599[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m parent[38;5;241m.[39mis_dir():
[0;32m--> 600[0m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124mrf[39m[38;5;124m"[39m[38;5;124mCannot save file into a non-existent directory: [39m[38;5;124m'[39m[38;5;132;01m{[39;00mparent[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m"[39m)

[0;31mOSError[0m: Cannot save file into a non-existent directory: 'Addresses'
OSError: Cannot save file into a non-existent directory: 'Addresses'

